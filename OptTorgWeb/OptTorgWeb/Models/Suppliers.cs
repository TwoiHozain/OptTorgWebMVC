// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using OptTorgWeb.Classes;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace OptTorgWebDB.Models;

public partial class Suppliers
{
    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    public long IdSuppliers { get; set; }

    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    public string Company { get; set; }

    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    [RegularExpression(@"^[а-яА-Я]+$", ErrorMessage = ErrorMessages.OnlyRuLetters)]
    public string Surname { get; set; }

    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    [RegularExpression(@"^[а-яА-Я]+$", ErrorMessage = ErrorMessages.OnlyRuLetters)]
    public string Name { get; set; }

    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    [RegularExpression(@"^[а-яА-Я]+$", ErrorMessage = ErrorMessages.OnlyRuLetters)]
    public string Patronymic { get; set; }

    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    [RegularExpression(@"^[а-яА-Я]+$", ErrorMessage = ErrorMessages.OnlyRuLetters)]
    public string Position { get; set; }

    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    [RegularExpression(@"^ул\. [А-Яа-яЁёA-Za-z\s\-]+, (д\.|корп\.) [А-Яа-яЁёA-Za-z0-9]+(, (д\.|корп\.) [А-Яа-яЁёA-Za-z0-9]+)?$",ErrorMessage = ErrorMessages.WrongAdressFormat)]
    public string Adress { get; set; }

    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    [RegularExpression(@"^[а-яА-Я]+$", ErrorMessage = ErrorMessages.OnlyRuLetters)]
    public string City { get; set; }

    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    [RegularExpression(@"^[а-яА-Я]+$", ErrorMessage = ErrorMessages.OnlyRuLetters)]
    public string Oblast { get; set; }

    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    [RegularExpression(@"^\d{6}$", ErrorMessage = ErrorMessages.WrongPostIndexFormat)]
    public string PostIndex { get; set; }

    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    [RegularExpression(@"^[а-яА-Я]+$", ErrorMessage = ErrorMessages.OnlyRuLetters)]
    public string State { get; set; }

    public int? Fax { get; set; }

    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    [RegularExpression(@"^(\+7|8)[\s\-]?\(?\d{3}\)?[\s\-]?\d{3}[\s\-]?\d{2}[\s\-]?\d{2}$",ErrorMessage = ErrorMessages.WrongPhoneFormat)]
    public string Phone { get; set; }

    public string WebPage { get; set; }

    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    [RegularExpression(@"^\d+$", ErrorMessage = "Допустимы только цифры.")]
    public int Inn { get; set; }

    public bool Active { get; set; }

    public virtual ICollection<Buys> Buys { get; set; } = new List<Buys>();

    public static List<Suppliers> GetAllSuppliers()
    {
        var db = new OptTorgDBContext();
        return db.Suppliers.Where(x => x.Active == true).ToList();
    }
    public static void CreatrSuppliers(Suppliers p)
    {
        var db = new OptTorgDBContext();
        p.Active = true;
        db.Suppliers.Add(p);
        db.SaveChanges();
    }
    public static Suppliers GetSuppliersById(int id)
    {
        var db = new OptTorgDBContext();
        return db.Suppliers.Single(x => x.IdSuppliers == id);
    }
    public static void UpdateSuppliers(Suppliers p)
    {
        var db = new OptTorgDBContext();
        p.Active = true;
        db.Suppliers.Update(p);
        db.SaveChanges();
    }
    public static void DeleteSuppliers(int id)
    {
        var db = new OptTorgDBContext();
        var pos = db.Suppliers.FirstOrDefault(x => x.IdSuppliers == id);
        pos.Active = false;

        db.SaveChanges();
    }
    public static void DCascade(int id)
    {
        var db = new OptTorgDBContext();
        var strg = db.Suppliers.FirstOrDefault(x => x.IdSuppliers == id);

        db.Remove(strg);
        db.SaveChanges();
    }
}