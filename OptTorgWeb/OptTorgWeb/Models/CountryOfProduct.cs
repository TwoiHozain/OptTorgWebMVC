// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using OptTorgWeb.Classes;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace OptTorgWebDB.Models;

public partial class CountryOfProduct
{
    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    public long IdCof { get; set; }

    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    [RegularExpression(@"^\d+$", ErrorMessage = "Допустимы только цифры.")]
    public string NumericCode { get; set; }

    [Required(ErrorMessage = ErrorMessages.IsRequired)]
    [RegularExpression(@"^[a-zA-Z]+$", ErrorMessage = ErrorMessages.OnlyKirilicaLetters)] 
    public string ShortName { get; set; }

    public bool Active { get; set; }

    public virtual ICollection<Products> Products { get; set; } = new List<Products>();

    public static List<CountryOfProduct> GetAllCountryOfProduct()
    {
        var db = new OptTorgDBContext();
        return db.CountryOfProduct.Where(x => x.Active == true).ToList();
    }
    public static void CreatrCountryOfProduct(CountryOfProduct p)
    {
        var db = new OptTorgDBContext();
        p.Active = true;
        db.CountryOfProduct.Add(p);
        db.SaveChanges();
    }
    public static CountryOfProduct GetCountryOfProductById(int id)
    {
        var db = new OptTorgDBContext();
        CountryOfProduct c = db.CountryOfProduct.Single(x => x.IdCof == id);
        return c;
    }
    public static void UpdateCountryOfProduct(CountryOfProduct p)
    {
        var db = new OptTorgDBContext();
        p.Active = true;
        db.CountryOfProduct.Update(p);
        db.SaveChanges();
    }
    public static void DeleteCountryOfProduct(int id)
    {
        var db = new OptTorgDBContext();
        var pos = db.CountryOfProduct.FirstOrDefault(x => x.IdCof == id);
        pos.Active = false;

        db.SaveChanges();
    }
    public static void DCascade(int id)
    {
        var db = new OptTorgDBContext();
        var strg = db.CountryOfProduct.FirstOrDefault(x => x.IdCof == id);

        db.Remove(strg);
        db.SaveChanges();
    }
}