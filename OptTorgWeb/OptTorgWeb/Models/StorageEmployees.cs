// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;

namespace OptTorgWebDB.Models;

public partial class StorageEmployees
{
    public long IdSe { get; set; }

    public long EmployeeId { get; set; }

    public long StorageId { get; set; }

    public bool Active { get; set; }

    public DateOnly AdmissionDate { get; set; }

    public virtual ICollection<Drivers> Drivers { get; set; } = new List<Drivers>();

    public virtual Employees EmployeeNavigation { get; set; }

    public virtual ICollection<Sending> Sending { get; set; } = new List<Sending>();

    public virtual Storages StorageNavigation { get; set; }

    public static void CreatrStorageEmployees(StorageEmployees p)
    {
        var db = new OptTorgDBContext();
        p.Active = true;
        db.StorageEmployees.Add(p);
        db.SaveChanges();
    }

    public static IEnumerable<StorageEmployees> GetAllStorageEmployees()
    {
        var db = new OptTorgDBContext();
        var p = db.StorageEmployees
            .Include(x => x.EmployeeNavigation)
            .Include(x => x.EmployeeNavigation.Position)
            .Include(x=>x.StorageNavigation);

        return p.Where(x => x.Active == true).ToList();
    }

    public static StorageEmployees GetStorageEmployeesById(long id)
    {
        var db = new OptTorgDBContext();
        var p = db.StorageEmployees
            .Include(x => x.EmployeeNavigation)
            .Include(x=>x.EmployeeNavigation.Position)
            .Include(x => x.StorageNavigation);

        return p.Where(x => x.Active == true).Single(x=> x.IdSe == id);
    }

    public static IEnumerable<StorageEmployees> GetStorageEmployeesOnStorageExceptDrivers(long storageId)
    {
        var db = new OptTorgDBContext();
        var p = db.StorageEmployees
            .Include(x => x.EmployeeNavigation)
            .Include(x => x.EmployeeNavigation.Position)
            .Include(x => x.StorageNavigation)
            .Where(x => x.Active == true);

        return p.Where(x => x.StorageId == storageId && x.EmployeeNavigation.Position.IdPositions!=25 && x.EmployeeNavigation.Position.IdPositions != 23).ToList();
    }

    public static List<StorageEmployees> GetNotAssignedDrivers()
    {
        var db = new OptTorgDBContext();
        var p = db.StorageEmployees
            .Include(x => x.EmployeeNavigation)
            .Include(x => x.EmployeeNavigation.Position)
            .Include(x=> x.StorageNavigation)
            .Where(x => x.Active == true && x.EmployeeNavigation.PositionId == 25);

        var seId = db.StorageEmployees.Where(x => x.Active == true && x.EmployeeNavigation.PositionId == 25).Select(x=>x.IdSe).ToList();
        var drSeId = db.Drivers.Where(x => x.Active == true).Select(x=>x.SeId).ToList();

        var notAssignedSe = seId.Except(drSeId);

        return p.Where(x => notAssignedSe.Contains(x.IdSe)).Include(x => x.EmployeeNavigation.Position).ToList();
    }

    public static void UpdateStorageEmployees(StorageEmployees p)
    {
        var db = new OptTorgDBContext();
        p.Active = true;
        p.EmployeeNavigation.Active = true;
        
        db.StorageEmployees.Update(p);
        db.SaveChanges();
    }

    public static void DeleteStorageEmployees(int id)
    {
        var db = new OptTorgDBContext();
        var pos = db.StorageEmployees.FirstOrDefault(x => x.IdSe == id);
        pos.Active = false;

        db.SaveChanges();
    }
}