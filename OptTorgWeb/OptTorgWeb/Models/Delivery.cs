// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;

namespace OptTorgWebDB.Models;

public partial class Delivery
{
    public long IdDelivery { get; set; }

    public long EmployeeReceiveId { get; set; }

    public long EmployeeAcceptId { get; set; }

    public long StorageId { get; set; }

    public long TransportId { get; set; }

    public long StatusId { get; set; }

    public long DriverId { get; set; }

    public string Osnovanie { get; set; }
    
    public bool Active { get; set; }

    public DateOnly Date { get; set; }

    public string NomerDoverennosti { get; set; }

    public virtual Drivers Driver { get; set; }

    public virtual Employees EmployeeAccept { get; set; }

    public virtual Employees EmployeeReceive { get; set; }

    public virtual ICollection<ProductPart> ProductPart { get; set; } = new List<ProductPart>();

    public virtual DeliveryStatus Status { get; set; }

    public virtual Storages Storage { get; set; }

    public virtual Transport Transport { get; set; }

    public static List<Delivery> GetAllDelivery()
    {
        var db = new OptTorgDBContext();
        var p = db.Delivery
            .Where(x => x.Active == true)
            .Include(x=>x.EmployeeAccept)
            .Include(x => x.EmployeeReceive)
            .Include(x => x.Storage)
            .Include(x => x.Driver.SeNavigation.EmployeeNavigation)
            .Include(x => x.Transport)
            .Include(x => x.Status)
            .OrderBy(x => x.Status.Status)
            .ToList();

        return p.ToList();
    }

    public static void CreateDelivery(Delivery d)
    {
        var db = new OptTorgDBContext();
        d.Active = true;
        d.StatusId = 5;
        db.Delivery.Add(d);

        db.SaveChanges();
    }

    public static void DeleteDelivery(int id)
    {
        var db = new OptTorgDBContext();
        var d = db.Delivery.FirstOrDefault(x => x.IdDelivery == id);
        d.Active = false;

        db.SaveChanges();
    }
}