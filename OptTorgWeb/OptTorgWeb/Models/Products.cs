// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;

namespace OptTorgWebDB.Models;

public partial class Products
{
    public long IdProduct { get; set; }

    public long MuId { get; set; }

    public long PackingId { get; set; }

    public long SortId { get; set; }

    public long CountryId { get; set; }

    public string ProductName { get; set; }

    public string ProductCode { get; set; }

    public string ProductArticle { get; set; }

    public string Horactiristics { get; set; }

    public int CountPerPlase { get; set; }

    public double MassPerPlase { get; set; }

    public double MassPrutto { get; set; }

    public double MassNetto { get; set; }

    public double PricePerPiece { get; set; }

    public double? PricePerPieceNoNds { get; set; }

    public double? Nds { get; set; }

    public double? TariffPerPiece { get; set; }

    public double? ExciseTaxe { get; set; }

    public bool Active { get; set; }

    public virtual ICollection<Buys> Buys { get; set; } = new List<Buys>();

    public virtual CountryOfProduct Country { get; set; }

    public virtual MeasureUnits Mu { get; set; }

    public virtual Packaging Packing { get; set; }

    public virtual ICollection<Sales> Sales { get; set; } = new List<Sales>();

    public virtual ProductSort Sort { get; set; }

    public static List<Products> GetAllProducts()
    {
        var db = new OptTorgDBContext();
        var p =db.Products
            .Include(x=>x.Sort)
            .Include(x => x.Country)
            .Include(x => x.Mu)
            .Include(x => x.Packing)
            .Where(x => x.Active == true).ToList();
        return p;
    }

    public static void CreatrProducts(Products p)
    {
        var db = new OptTorgDBContext();
        p.Active = true;

        db.Products.Add(p);
        db.SaveChanges();
    }

    public static Products GetProductsById(int id)
    {
        var db = new OptTorgDBContext();
        
        var p=db.Products.Include(x => x.Sort)
            .Include(x => x.Country)
            .Include(x => x.Mu)
            .Include(x => x.Packing).Single(x => x.IdProduct == id);

        return p;
    }

    public static void UpdateProducts(Products p)
    {
        var db = new OptTorgDBContext();
        p.Active = true;
        db.Products.Update(p);
        db.SaveChanges();
    }

    public static void DeleteProducts(int id)
    {
        var db = new OptTorgDBContext();
        var pos = db.Products.FirstOrDefault(x => x.IdProduct == id);
        pos.Active = false;

        db.SaveChanges();
    }
}